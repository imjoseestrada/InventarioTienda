#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventarioTienda
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Tienda")]
	public partial class conexionTiendaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertProveedore(Proveedore instance);
    partial void UpdateProveedore(Proveedore instance);
    partial void DeleteProveedore(Proveedore instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    #endregion
		
		public conexionTiendaDataContext() : 
				base(global::InventarioTienda.Properties.Settings.Default.TiendaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public conexionTiendaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionTiendaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionTiendaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionTiendaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Proveedore> Proveedores
		{
			get
			{
				return this.GetTable<Proveedore>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Productos
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ObtenerProductosPorIdCategoria")]
		public ISingleResult<ObtenerProductosPorIdCategoriaResult> ObtenerProductosPorIdCategoria([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCategoria", DbType="Int")] System.Nullable<int> idCategoria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCategoria);
			return ((ISingleResult<ObtenerProductosPorIdCategoriaResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategoria;
		
		private string _NombreCategoria;
		
		private EntitySet<Producto> _Productos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnNombreCategoriaChanging(string value);
    partial void OnNombreCategoriaChanged();
    #endregion
		
		public Categoria()
		{
			this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCategoria", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreCategoria
		{
			get
			{
				return this._NombreCategoria;
			}
			set
			{
				if ((this._NombreCategoria != value))
				{
					this.OnNombreCategoriaChanging(value);
					this.SendPropertyChanging();
					this._NombreCategoria = value;
					this.SendPropertyChanged("NombreCategoria");
					this.OnNombreCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Productos", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<Producto> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedores")]
	public partial class Proveedore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProveedor;
		
		private string _NombreProveedor;
		
		private EntitySet<Producto> _Productos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProveedorChanging(int value);
    partial void OnIdProveedorChanged();
    partial void OnNombreProveedorChanging(string value);
    partial void OnNombreProveedorChanged();
    #endregion
		
		public Proveedore()
		{
			this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProveedor", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreProveedor
		{
			get
			{
				return this._NombreProveedor;
			}
			set
			{
				if ((this._NombreProveedor != value))
				{
					this.OnNombreProveedorChanging(value);
					this.SendPropertyChanging();
					this._NombreProveedor = value;
					this.SendPropertyChanged("NombreProveedor");
					this.OnNombreProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedore_Producto", Storage="_Productos", ThisKey="IdProveedor", OtherKey="IdProveedor")]
		public EntitySet<Producto> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedore = this;
		}
		
		private void detach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private string _DescripcionProducto;
		
		private int _IdProveedor;
		
		private int _IdCategoria;
		
		private short _PrecioUnitario;
		
		private short _UnidadesStock;
		
		private short _UnidadesOrden;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Proveedore> _Proveedore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnDescripcionProductoChanging(string value);
    partial void OnDescripcionProductoChanged();
    partial void OnIdProveedorChanging(int value);
    partial void OnIdProveedorChanged();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnPrecioUnitarioChanging(short value);
    partial void OnPrecioUnitarioChanged();
    partial void OnUnidadesStockChanging(short value);
    partial void OnUnidadesStockChanged();
    partial void OnUnidadesOrdenChanging(short value);
    partial void OnUnidadesOrdenChanged();
    #endregion
		
		public Producto()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._Proveedore = default(EntityRef<Proveedore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescripcionProducto", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string DescripcionProducto
		{
			get
			{
				return this._DescripcionProducto;
			}
			set
			{
				if ((this._DescripcionProducto != value))
				{
					this.OnDescripcionProductoChanging(value);
					this.SendPropertyChanging();
					this._DescripcionProducto = value;
					this.SendPropertyChanged("DescripcionProducto");
					this.OnDescripcionProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int NOT NULL")]
		public int IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					if (this._Proveedore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioUnitario", DbType="SmallInt NOT NULL")]
		public short PrecioUnitario
		{
			get
			{
				return this._PrecioUnitario;
			}
			set
			{
				if ((this._PrecioUnitario != value))
				{
					this.OnPrecioUnitarioChanging(value);
					this.SendPropertyChanging();
					this._PrecioUnitario = value;
					this.SendPropertyChanged("PrecioUnitario");
					this.OnPrecioUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnidadesStock", DbType="SmallInt NOT NULL")]
		public short UnidadesStock
		{
			get
			{
				return this._UnidadesStock;
			}
			set
			{
				if ((this._UnidadesStock != value))
				{
					this.OnUnidadesStockChanging(value);
					this.SendPropertyChanging();
					this._UnidadesStock = value;
					this.SendPropertyChanged("UnidadesStock");
					this.OnUnidadesStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnidadesOrden", DbType="SmallInt NOT NULL")]
		public short UnidadesOrden
		{
			get
			{
				return this._UnidadesOrden;
			}
			set
			{
				if ((this._UnidadesOrden != value))
				{
					this.OnUnidadesOrdenChanging(value);
					this.SendPropertyChanging();
					this._UnidadesOrden = value;
					this.SendPropertyChanged("UnidadesOrden");
					this.OnUnidadesOrdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Categoria", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedore_Producto", Storage="_Proveedore", ThisKey="IdProveedor", OtherKey="IdProveedor", IsForeignKey=true)]
		public Proveedore Proveedore
		{
			get
			{
				return this._Proveedore.Entity;
			}
			set
			{
				Proveedore previousValue = this._Proveedore.Entity;
				if (((previousValue != value) 
							|| (this._Proveedore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedore.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Proveedore.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._IdProveedor = value.IdProveedor;
					}
					else
					{
						this._IdProveedor = default(int);
					}
					this.SendPropertyChanged("Proveedore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ObtenerProductosPorIdCategoriaResult
	{
		
		private string _Producto;
		
		private short _Precio;
		
		private short _Existencia;
		
		private short _En_espera;
		
		private string _Categoría;
		
		private string _Proveedor;
		
		public ObtenerProductosPorIdCategoriaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producto", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				if ((this._Producto != value))
				{
					this._Producto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="SmallInt NOT NULL")]
		public short Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this._Precio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Existencia", DbType="SmallInt NOT NULL")]
		public short Existencia
		{
			get
			{
				return this._Existencia;
			}
			set
			{
				if ((this._Existencia != value))
				{
					this._Existencia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[En espera]", Storage="_En_espera", DbType="SmallInt NOT NULL")]
		public short En_espera
		{
			get
			{
				return this._En_espera;
			}
			set
			{
				if ((this._En_espera != value))
				{
					this._En_espera = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoría", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Categoría
		{
			get
			{
				return this._Categoría;
			}
			set
			{
				if ((this._Categoría != value))
				{
					this._Categoría = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proveedor", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Proveedor
		{
			get
			{
				return this._Proveedor;
			}
			set
			{
				if ((this._Proveedor != value))
				{
					this._Proveedor = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
